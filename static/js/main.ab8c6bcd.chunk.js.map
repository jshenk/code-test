{"version":3,"sources":["logo.svg","StatefulButton.js","ButtonCounter.js","App.js","reportWebVitals.js","index.js"],"names":["StatefulButton","props","React","useState","default","buttonText","setButtonText","onClick","ButtonCoutner","counter","setCounter","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAAe,I,YCeAA,MAbf,SAAwBC,GAAQ,IAAD,EACOC,IAAMC,SAASF,EAAMG,SAD5B,mBACtBC,EADsB,KACVC,EADU,KAG7B,OACE,8BACE,wBACEC,QAAS,kBAAMD,EAAc,sCAD/B,SAGGD,OCOMG,MAff,WAA0B,IAAD,EACON,IAAMC,SAAS,GADtB,mBAChBM,EADgB,KACPC,EADO,KAEvB,OACE,gCACE,4BACE,mGAEGD,OAIL,wBAAQF,QAAS,kBAAMG,EAAWD,EAAU,IAA5C,2BCgBSE,MAxBf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,oBAAIA,UAAU,cAAd,yBACA,sBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,eAAf,UACE,iDADF,oKAKE,cAAC,EAAD,CAAgBR,QAAQ,iBAE1B,sBAAKQ,UAAU,eAAf,UACE,yCADF,uLAKE,cAAC,EAAD,cCVKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ab8c6bcd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\n\nfunction StatefulButton(props) {\n  const [buttonText, setButtonText] = React.useState(props.default);\n\n  return (\n    <div>\n      <button\n        onClick={() => setButtonText(\"Yeah, i'm a useless button sorry.\")}\n      >\n        {buttonText}\n      </button>\n    </div>\n  );\n}\nexport default StatefulButton;\n","import React from \"react\";\n\nfunction ButtonCoutner() {\n  const [counter, setCounter] = React.useState(0);\n  return (\n    <div>\n      <p>\n        <strong>\n          Number of times I have clicke this button for no real reason:\n          {counter}\n        </strong>\n      </p>\n\n      <button onClick={() => setCounter(counter + 1)}>Click Me!</button>\n    </div>\n  );\n}\nexport default ButtonCoutner;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport StatefulButton from \"./StatefulButton\";\nimport ButtonCoutner from \"./ButtonCounter\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1 className=\"text-center\">React Hooks</h1>\n      <div className=\"grid\">\n        <div className=\"question-one\">\n          <h2>Stateful Button</h2>\n          A React button where I passed props, and also seemed to use some sort\n          of state? It was a little hard to tell without seeing what that button\n          did on the frontend.\n          <StatefulButton default=\"Click me!\" />\n        </div>\n        <div className=\"question-two\">\n          <h2>Counter</h2>\n          If I were to encounter a class of that size, where all it did was show\n          an incrimental counter, I would rewrite it for sure using hooks. 2\n          lines of code vs at least 10 shown before.\n          <ButtonCoutner />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}